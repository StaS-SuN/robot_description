<?xml version="1.0"?>
<robot>

<gazebo referense="body_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Red</material>
</gazebo>

<gazebo referense="wheel1_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Yellow</material>
</gazebo>

<gazebo referense="wheel2_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Yellow</material>
</gazebo>

<gazebo referense="wheel3_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Yellow</material>
</gazebo>

<gazebo referense="wheel4_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Yellow</material>
</gazebo>

<gazebo>
    <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
        <updateRate>1000.0</updateRate>
        <robotNamespace> </robotNamespace>
        <leftFrontJoint>wheel4_joint</leftFrontJoint>
        <rightFrontJoint>wheel3_joint</rightFrontJoint>
        <leftRearJoint>wheel2_joint</leftRearJoint>
        <rightRearJoint>wheel1_joint</rightRearJoint>
        <wheelSeparation>${body_link_y_dim+wheel_link_length}</wheelSeparation>
        <wheelDiameter>${2*wheel_link_radius}</wheelDiameter>

        <torque>10000</torque>

        <commandTopic>cmd_vel</commandTopic>
        <odometryTopic>odom</odometryTopic>
        <odometryFrame>odom</odometryFrame>
        <robotBaseFrame>dummy</robotBaseFrame>
        <publishWheelTF>true</publishWheelTF>
        <publishOdom>true</publishOdom>
        <publishWheelJointState>true</publishWheelJointState>
        <covariance_x>0.0001</covariance_x>
        <covariance_y>0.0001</covariance_y>
        <covariance_yaw>0.01</covariance_yaw>
    </plugin>


</gazebo>
<gazebo reference="hokuyo_link">
    <sensor type="ray" name="lds_lfcd_sensor">
    <pose>0 0 0 0 0 0</pose>
    <visualize>true</visualize>
    <update_rate>5</update_rate>
    <ray>
        <scan>
            <horizontal>
                <samples>360</samples>
                <resolution>1</resolution>
                <min_angle>0.0</min_angle>
                <max_angle>6.28319</max_angle>
            </horizontal>
        </scan>
        <range>
            <min>0.120</min>
            <max>7</max>
            <resolution>0.015</resolution>
        </range>
        <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
        </noise>
        </ray>
    <plugin name="gazebo_ros_lds_lfcd_controller" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>hokuyo_link</frameName>
    </plugin>
    </sensor>
 </gazebo>

 <gazebo>
 <plugin name="base_controller" filename="libgazebo_ros_planar_move.so">

 <commandTopic>cmd_vel</commandTopic>
 <odometryTopic>odom</odometryTopic>
 <odometryFrame>odom</odometryFrame>
 <odometryRate>100.0</odometryRate>
 <robotBaseFrame>dummy</robotBaseFrame>
 </plugin>
 </gazebo>

<gazebo reference="camera">
<sensor type="camera" name="Pi Camera">
    <always_on>true</always_on>
    <camera>
        <horizontal_fov>1.085595</horizontal_fov>
        <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
        </image>
        <clip>
            <near>0.03</near>
            <far>100</far>
        </clip>
    </camera>
    <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>30.0</updateRate>
    <cameraName>camera</cameraName>
    <frameName>camera_rgb_optical_frame</frameName>
    <imageTopicName>rgb/image_raw</imageTopicName>
    <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
    <hackBaseline>0.07</hackBaseline>
    <distortionK1>0.0</distortionK1>
    <distortionK2>0.0</distortionK2>
    <distortionK3>0.0</distortionK3>
    <distortionT1>0.0</distortionT1>
    <distortionT2>0.0</distortionT2>
    </plugin>
</sensor>
</gazebo>

</robot>